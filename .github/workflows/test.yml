name: Test

on:
  push:
    branches: [main]
    paths-ignore:
      - "docs/**"
      - ".github/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "docs/**"
      - ".github/**"
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]
        architecture: [x64]
      # 일부 작업이 실패하더라도 다른 모든 matrix 작업이 완료될 때까지 계속 실행됩니다.
      fail-fast: false
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SKIP_DATABASE_TESTS: true

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
          cache: "pip"

      - name: Install system dependencies on macOS
        if: runner.os == 'macOS'
        run: |
          brew install cairo

      - name: Install system dependencies on Windows
        if: runner.os == 'Windows'
        run: |
          choco install cairo

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv

      - name: Create and activate virtual environment on Linux
        if: runner.os != 'Windows'
        run: |
          uv venv
          . .venv/bin/activate

      - name: Create and activate virtual environment on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          uv venv
          .venv\Scripts\Activate

      - name: Install dependencies
        run: |
          uv pip install -e ".[all,dev]"

      - name: Run tests on Linux
        if: runner.os != 'Windows'
        run: |
          uv run python -m pytest

      # uv run python 명령을 사용하니
      # 윈도우 3.13 실행 시에 저버전(1.26.4)의 numpy 설치를 시도하고
      # 1.26.4 버전의 3.13 윈도우 바이너리가 없어서 빌드 오류가 발생
      # 그래서 python 명령으로 직접 실행토록 변경
      - name: Run tests on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          .venv\Scripts\python -m pytest

      - name: Test build
        run: |
          pip install build
          python -m build
