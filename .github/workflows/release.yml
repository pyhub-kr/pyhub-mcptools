name: Create Release and Build Windows Executable

on:
  push:
    tags:
      - 'v*' # 'v'로 시작하는 태그가 푸시될 때 실행 (예: v0.1.0)

permissions:
  contents: write # GitHub Releases 생성 및 아티팩트 업로드를 위해 필요

jobs:
  build-windows:
    name: Build Executable on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            python-version: "3.13"
            architecture: x64
            platform: windows
          - os: macos-13
            python-version: "3.13"
            architecture: x64
            platform: macOS-x86_64
          - os: macos-latest
            python-version: "3.13"
            architecture: arm64
            platform: macOS-arm64
      # 일부 작업이 실패하더라도 다른 모든 matrix 작업이 완료될 때까지 계속 실행됩니다.
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install GNU Make (if needed)
      if: runner.os == 'Windows'
      run: choco install make -y

    - name: Install uv
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade uv

    - name: Create virtualenv
      run: |
        uv venv

    - name: Build onedir
      run: make build-onedir

    - name: Zip artifacts for Windows
      if: matrix.platform == 'windows'
      run: |
        cd dist
        7z a -tzip pyhub.mcptools-windows-${{ github.ref_name }}.zip pyhub.mcptools/

    - name: Generate SHA256 for Windows artifacts
      if: matrix.platform == 'windows'
      run: |
        cd dist
        certutil -hashfile pyhub.mcptools-windows-${{ github.ref_name }}.zip SHA256 | findstr /v "CertUtil" > pyhub.mcptools-windows-${{ github.ref_name }}.zip.sha256

    - name: Zip artifacts for macOS
      if: startsWith(matrix.platform, 'macOS')
      run: |
        cd dist
        zip -r pyhub.mcptools-${{ matrix.platform }}-${{ github.ref_name }}.zip pyhub.mcptools/

    - name: Generate SHA256 for macOS artifacts
      if: startsWith(matrix.platform, 'macOS')
      run: |
        cd dist
        shasum -a 256 pyhub.mcptools-${{ matrix.platform }}-${{ github.ref_name }}.zip > pyhub.mcptools-${{ matrix.platform }}-${{ github.ref_name }}.zip.sha256

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.zip
          dist/*.sha256
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
