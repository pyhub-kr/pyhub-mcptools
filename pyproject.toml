[project]
name = "pyhub-mcptools"
version = "0.9.8"
description = "파이썬사랑방 MCP 도구"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Chinseok Lee", email = "me@pyhub.kr"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business",
    "Topic :: Office/Business :: Office Suites",
]
dependencies = [
    "django>=5.2",
    "channels",
    "channels-redis",
    "uvicorn",
    "django-environ",
    "html2text",
    "mcp",
    "mcp-proxy",
    "typer",
    "tzlocal",
    "httpx",
    "psutil",
    "cloudpickle",
    "platformdirs",
    "aiofiles",
    "pywin32; sys_platform == 'win32'",
]

[project.optional-dependencies]
browser = [
    "bs4",
    "playwright",
]
music = [
    "bs4",
]
excel = [
    "xlwings",
    "openpyxl",
    "xlrd",
    "xlwt",
]
images = [
    "pillow",
]
python = [
    "pandas",
    "numpy",
    "matplotlib",
    "seaborn",
    "RestrictedPython",
]
sentiment = [
    "vaderSentiment",
]
gsheets = [
    "gspread>=6.0.0",
    "gspread-asyncio>=2.0.0",
    "google-auth>=2.0.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.2.0",
    "google-api-python-client>=2.0.0",
]
all = [
    "pyhub-mcptools[music,excel,browser,images,python,sentiment,gsheets]",
]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "pytest-httpx",
    "black",
    "isort",
    "mypy",
    "ruff",
    "djlint",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.1.0",
    "mkdocstrings>=0.20.0",
    "mkdocstrings-python>=1.0.0",
    "mkdocs-glightbox",
    "mkdocs-git-revision-date-localized-plugin",
    "mkdocs-material[imaging]",
]
build = ["setuptools", "wheel", "build", "twine"]

[project.urls]
Homepage = "https://github.com/pyhub-kr/pyhub-mcptools"
Documentation = "https://pyhub-kr.github.io/pyhub-mcptools"
"Bug Tracker" = "https://github.com/pyhub-kr/pyhub-mcptools/issues"
"Source Code" = "https://github.com/pyhub-kr/pyhub-mcptools"

[project.scripts]
"mcp" = "pyhub.mcptools.__main__:app"
"mcptools" = "pyhub.mcptools.__main__:app"
"pyhub.mcptools" = "pyhub.mcptools.__main__:app"
"pyhub.mcptools.sentiment" = "pyhub.mcptools.sentiment.__main__:app"
"pyhub.mcptools.setup" = "pyhub.mcptools.setup.__main__:app"
"pyhub.mcptools.google" = "pyhub.mcptools.google.__main__:app"

[project.entry-points."mkdocs.plugins"]
local_social = "plugins.local_social.plugin:LocalSocialPlugin"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["pyhub"]
exclude = ["**/__pycache__", "**/.DS_Store", "**/conftest.py", "**/tests/", "**/test_*.py"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 120
target-version = ["py310", "py311", "py312", "py313"]

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "B", "I"]
ignore = ["B008"]  # Typer 사용 시 함수 호출 기본값 허용

[tool.djlint]
profile = "django"
indent = 2

[tool.pytest.ini_options]
testpaths = ["pyhub"]
python_files = "test_*.py"
asyncio_mode = "auto"  # Enable asyncio mode
asyncio_default_fixture_loop_scope = "session"  # Set default fixture loop scope
markers = [
    "asyncio: mark test as an asyncio test",
    "integration: mark test as an integration test requiring API access",
    "error_handling: mark test as error handling specific test",
    "slow: mark test as slow running test",
    "batch: mark test as batch operation test",
]
